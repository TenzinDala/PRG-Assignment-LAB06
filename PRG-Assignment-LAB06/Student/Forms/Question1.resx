<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picboxQ1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>